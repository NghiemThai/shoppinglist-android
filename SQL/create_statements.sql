-- Command to read the create_statements with sqlite3 (shell)
-- .read C:/<Folder>/<Folder>/create_statements.sql

CREATE TABLE STORE (
  	STO_ID INTEGER PRIMARY KEY NOT NULL,
	STO_NAME VARCHAR(75) NOT NULL
);

CREATE TABLE UNIT (
	UNI_ID INTEGER PRIMARY KEY NOT NULL,
	UNI_NAME VARCHAR(50) NOT NULL
);

CREATE TABLE SHOPPINGLIST (
	SHO_ID INTEGER PRIMARY KEY NOT NULL,
	SHO_CREATED_TIME TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	SHO_FINISHED_TIME TIMESTAMP
);

CREATE TABLE FAVORITE (
	FAV_ID INTEGER PRIMARY KEY NOT NULL,
	FAV_NAME VARCHAR(75) NOT NULL
);

CREATE TABLE PRODUCT (
	PRO_ID INTEGER PRIMARY KEY NOT NULL,
	PRO_NAME VARCHAR(100) NOT NULL,
	PRO_UNI_ID INTEGER NOT NULL,
	FOREIGN KEY (PRO_UNI_ID) REFERENCES UNIT(UNI_ID)
);

CREATE TABLE SHOPPINGLIST_PRODUCT_MAPPING (
	SPM_ID INTEGER PRIMARY KEY NOT NULL,
	SPM_SHO_ID INTEGER NOT NULL,
	SPM_STO_ID INTEGER NOT NULL,
	SPM_PRO_ID INTEGER NOT NULL,
	SPM_QUANTITY FLOAT NOT NULL,
	SPM_CHECKED SMALLINT DEFAULT 0,
	FOREIGN KEY (SPM_SHO_ID) REFERENCES SHOPPINGLIST(SHO_ID),
	FOREIGN KEY (SPM_STO_ID) REFERENCES STORE(STO_ID),
	FOREIGN KEY (SPM_PRO_ID) REFERENCES PRODUCT(PRO_ID)
);

CREATE TABLE FAVORITE_PRODUCT_MAPPING (
	FPM_ID INTEGER PRIMARY KEY NOT NULL,
	FPM_FAV_ID INTEGER NOT NULL,
	FPM_STO_ID INTEGER NOT NULL,
	FPM_PRO_ID INTEGER NOT NULL,
	FPM_QUANTITY FLOAT NOT NULL,
	FOREIGN KEY (FPM_FAV_ID) REFERENCES FAVORITE(FAV_ID),
	FOREIGN KEY (FPM_STO_ID) REFERENCES STORE(STO_ID),
	FOREIGN KEY (FPM_PRO_ID) REFERENCES PRODUCT(PRO_ID)
);

-- not normalized because it's only a history table
-- only used for show data and not to work with the data
-- initial insert after each cyclus and delete when user wants to
CREATE TABLE HISTORY (
	HIS_ID INTEGER PRIMARY KEY NOT NULL,
	HIS_SHO_ID INTEGER NOT NULL,
	HIS_STORE VARCHAR(75) NOT NULL,
	HIS_PRODUCT VARCHAR(100) NOT NULL,
	HIS_UNIT VARCHAR(50) NOT NULL,
	HIS_QUANTITY FLOAT NOT NULL,
	FOREIGN KEY (HIS_SHO_ID) REFERENCES SHOPPINGLIST(SHO_ID)
);
